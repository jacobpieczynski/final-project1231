Without randomness, with random random_state in test each time, 50 trials:
accuracy 56.5497%

With 100 trials:
accuracy 56.02%

With 200 trials:
accuracy 56.07109%

Randomness included 1, 100 trials:
accuracy 55.55118%

Randomness included 2, 100 trials:
accuracy 55.99857%

Randomness included 3, 100 trials:
accuracy 55.17061%
Average across 3 rounds: 55.57345%

Just to confirm, no randomness, 100 trials:
accuracy 55.9289%

Overall, randomness seems to harm the model instead of help


Tested data without OPS - I believe it is too collinear with other slg and obp, 100 trials:
accuracy 55.70142%

Round 2, 100 trials:
accuracy 56.3744%

Round 3, 100 trials:
accuracy 55.3838%
Average across 3 rounds: 55.8198%

OPS Doesn't seem to have a large impact on the accuracy - about .3%?


Tested data without OPS and batting average, 100 trials:
accuracy 55.82938%

Round 2, 100 trials:
accuracy 55.96208%

Round 3, 100 trials:
accuracy 55.50171%
Average across 3 rounds: 55.76439%


Tested without scaling data, 100 trials:
accuracy 55.6066%
Scaling helps

-----------
All w/ 100 trials:

Scikit Log Regression Function:
accuracy 54.758%

My log function:
accuracy 56.303%

TESTING PRIOR_RANGE:
10 games:
accuracy 56.165%

7 games:
accuracy 56.033%

5 games:
accuracy 55.9478%

3 games:
accuracy 55.327%


TESTING GAME THRESHOLD:
25 games:
accuracy 56.4705%

20 games:
accuracy 56.0616%

15 games:
accuracy 56.8767%

10 games:
accuracy 56.1769%

Round 2:
25 games:
accuracy 56.45098%

15 games:
accuracy 56.328%

Round 3:
25 games:
accuracy 56.3774%

15 games:
accuracy 56.26027%